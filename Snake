import pygame
import time
import random

# Inicializa pygame
pygame.init()

# Definir colores
blanco = (255, 255, 255)
amarillo = (255, 255, 102)
verde = (0, 255, 0)
rojo = (213, 50, 80)
negro = (0, 0, 0)
azul = (50, 153, 213)

# Tamaño de la pantalla
ancho = 600
alto = 400
pantalla = pygame.display.set_mode((ancho, alto))
pygame.display.set_caption('Snake Game')

# Tamaño del bloque y velocidad de la serpiente
tam_bloque = 20
velocidad = 13

# Fuente para mostrar puntuación
fuente = pygame.font.SysFont(None, 35)

def mostrar_puntaje(puntos):
    valor = fuente.render("Puntos: " + str(puntos), True, blanco)
    pantalla.blit(valor, [0, 0])

def dibujar_serpiente(tam_bloque, lista_serpiente):
    for x in lista_serpiente:
        pygame.draw.rect(pantalla, verde, [x[0], x[1], tam_bloque, tam_bloque])

def mensaje(msg, color):
    fuente_mensaje = pygame.font.SysFont(None, 25)
    texto = fuente_mensaje.render(msg, True, color)
    pantalla.blit(texto, [ancho / 6, alto / 3])

def reiniciar_juego():
    x1 = ancho / 2
    y1 = alto / 2
    x1_cambio = 0
    y1_cambio = 0
    lista_serpiente = []
    longitud_serpiente = 1
    manzana_x = round(random.randrange(0, ancho - tam_bloque) / 20.0) * 20.0
    manzana_y = round(random.randrange(0, alto - tam_bloque) / 20.0) * 20.0
    puntos = 0
    return x1, y1, x1_cambio, y1_cambio, lista_serpiente, longitud_serpiente, manzana_x, manzana_y, puntos

def juego():
    game_over = False
    game_close = False

    x1, y1, x1_cambio, y1_cambio, lista_serpiente, longitud_serpiente, manzana_x, manzana_y, puntos = reiniciar_juego()

    reloj = pygame.time.Clock()

    while not game_over:

        while game_close == True:
            pantalla.fill(azul)
            mensaje("¡Perdiste! Presiona Q para salir o R para reiniciar", rojo)
            mostrar_puntaje(puntos)
            pygame.display.update()

            for evento in pygame.event.get():
                if evento.type == pygame.KEYDOWN:
                    if evento.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if evento.key == pygame.K_r:
                        x1, y1, x1_cambio, y1_cambio, lista_serpiente, longitud_serpiente, manzana_x, manzana_y, puntos = reiniciar_juego()
                        game_close = False

        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                game_over = True
            if evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_LEFT:
                    x1_cambio = -tam_bloque
                    y1_cambio = 0
                elif evento.key == pygame.K_RIGHT:
                    x1_cambio = tam_bloque
                    y1_cambio = 0
                elif evento.key == pygame.K_UP:
                    y1_cambio = -tam_bloque
                    x1_cambio = 0
                elif evento.key == pygame.K_DOWN:
                    y1_cambio = tam_bloque
                    x1_cambio = 0

        if x1 >= ancho or x1 < 0 or y1 >= alto or y1 < 0:
            game_close = True
        x1 += x1_cambio
        y1 += y1_cambio
        pantalla.fill(azul)
        pygame.draw.rect(pantalla, rojo, [manzana_x, manzana_y, tam_bloque, tam_bloque])
        cabeza_serpiente = []
        cabeza_serpiente.append(x1)
        cabeza_serpiente.append(y1)
        lista_serpiente.append(cabeza_serpiente)
        if len(lista_serpiente) > longitud_serpiente:
            del lista_serpiente[0]

        for x in lista_serpiente[:-1]:
            if x == cabeza_serpiente:
                game_close = True

        dibujar_serpiente(tam_bloque, lista_serpiente)
        mostrar_puntaje(puntos)

        pygame.display.update()

        if x1 == manzana_x and y1 == manzana_y:
            manzana_x = round(random.randrange(0, ancho - tam_bloque) / 20.0) * 20.0
            manzana_y = round(random.randrange(0, alto - tam_bloque) / 20.0) * 20.0
            longitud_serpiente += 1
            puntos += 100

        reloj.tick(velocidad)

    pygame.quit()
    quit()

juego()
